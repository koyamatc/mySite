---
title: 投稿記事
layout: post
postTitle: Spiral
categories: post composition
---
d3.jsで等角螺旋と螺旋上を動く円を描いてみました

<div id="svg01"></div>

<button id="btn01" class="btn btn-lg btn-primary">実行</button>
<button id="btn02" class="btn btn-lg btn-primary">リセット</button>
<button id="btn03" class="btn btn-lg btn-primary">螺旋を消す</button>
<button id="btn04" class="btn btn-lg btn-primary">螺旋を表示</button>
<h3>
$$
\text{x座標、y座標は　}
(B^{\theta}\cdot\cos\theta,B^{\theta}\cdot\sin\theta) \quad B>1　
\text{ で求めています}
$$
</h3>

<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_SVG"></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="{{site.url}}/js/d3draws.js" charset="utf-8"></script>

<script>

  color = d3.scale.category20();

  var svg01 = d3.select("#svg01")
                .append("svg")
                .attr("height",700)
                .attr("width",700)
                .style("background","#000");

  var xScale01 = d3.scale.linear()
                       .domain([-350,350])
                       .range([0,700]);
  var yScale01 = d3.scale.linear()
                       .domain([350,-350])
                       .range([0,700]); 

	var line = d3.svg.line()
      .x(function(d) { return xScale01(d.x); })
      .y(function(d) { return yScale01(d.y); })
      .interpolate("linear");                       

 　var pathData01 = [];
 　var circles = [];
 　var r;
 　var B;

 　for (var i = 0; i < 100; i++) {
  　circles.push(i);
 　};
 
  draw();
 
　d3.select("#btn01").on("click",function(){
  
  var el = [];
  for (var i = 0; i < circles.length; i++) {
    el.push(svg01.select("#c"+i));
  };

  for (var i = 0; i < pathData01.length; i=i+1) {
  
    for (var j = 0; j < circles.length; j++) {
      el[j].transition()
        .delay(500*j + i*50)
        .duration(50)
        .attr("cx",function(){ return xScale01(pathData01[i].x); } )
        .attr("cy",function(){ return yScale01(pathData01[i].y); } )
        .attr("r", function(){ return 5+i*0.03} )

    };
  };
 })


 d3.select("#btn02").on("click",function(){
  draw();
 })

 d3.select("#btn03").on("click",function(){
  svg01.selectAll(".spiral").attr("opacity",0);
 })
 d3.select("#btn04").on("click",function(){
  svg01.selectAll(".spiral").attr("opacity",1);
 })

function draw(){
  pathData01=[];
  svg01.selectAll(".spiral").remove();
  svg01.selectAll("circle").remove();
  B=1.12;
  
  for (i=0;i<=24*pi;i=i+0.1){
  
    r = Math.pow(B,i);
    pathData01.push(new Point(r*Math.cos(i),r*Math.sin(i)));

  }
   svg01.append("path")
      .attr("stroke", "yellow")
      .attr("stroke-width",3)
      .attr("fill", "none")
      .attr("class","spiral")
      .attr("d", line(pathData01));

  for (var i=0;i<circles.length;i++){
    svg01.append("circle")
      .attr("cx",function(){ return xScale01(0); } )
      .attr("cy",function(){ return yScale01(0); } )
      .attr("r",1)
      .attr("id",function(){ return "c"+i; })
      .style("fill", function(){
        return color(Math.floor(Math.random()*20));
      })

  }     

}
</script>

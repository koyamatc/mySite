---
title: 投稿記事
layout: post
postTitle: d3 SVG area
categories: post composition
---

下のグラフの水色で塗りつぶされた領域を *area* と言います。

*area* の描画方法をメモしておきます。
  
<div id="svg02"></div>

  * area ジェネレータを作成
  * area 上部の曲線指定
  * area 下部(base)の曲線指定
  * path を追加して、上部曲線と下部曲線の間を塗りつぶす。

{% highlight javascript %}
// area の x点のデータを作る
var xData = [];
for (var i = 2; i <= 3; i=i+0.05) {
  xData.push(i);
};

var area02 = d3.svg.area() // areaジェネレータ
        .x(function(d,i) { return scale02X(d);})  // x座標
        .y0(function(d,i) { return scale02Y(0);}) // 下部(base)のy座標 ここでは　0
        .y1(function(d,i) { return scale02Y(Math.pow(Math.pow(d,4),-1));}); // 上部のy座標 1/x^4
    svg02.append("path") // path の追加
        .attr("d", area02(xData))
        .attr("fill", "aqua"); // 塗りつぶす
{% endhighlight %}

-----

{% math %}
y=log{t}^{-1} の\int_0^{2.3} \frac{1}{log{t}} dx が青い部分の面積です
{% endmath %}
<div id="ins03"></div>

{% highlight javascript %}
var curve032Data = []; // 0 <= t < 1
var curve033Data = []; // 1.01 <= t <= 2.3

for (var i = 0; i < 1; i=i+0.01) {
  curve032Data.push(i);
};
for (var i = 1.01; i <= 2.3; i=i+0.01) {
  curve033Data.push(i);
};


/* Areas*/
var area03 = d3.svg.area() // Area generator
        .x(function(d,i) { return scale03X(d);})
        .y0(function(d,i) { return scale03Y(0);})
        .y1(function(d,i) { return scale03Y(Math.pow(Math.log(d),-1));});

svg03.append("path") // t < 1 の path
        .attr("d", area03(curve032Data))
        .attr("fill", "blue");

svg03.append("path") // t > 1 のpath
        .attr("d", area03(curve033Data))
        .attr("fill", "blue");
{% endhighlight %}

<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

var gHeight = 400;
var gWidth = 600;
/* 積分　*/
var svg02 = d3.select("#svg02").append("svg")
                                 .attr("height",gHeight)
                                 .attr("width",gWidth)
                                 .style("background","black");
var texts = [
  {"x":30,"y":20,"txt":"y"},  
  {"x":580,"y":390,"txt":"x"}
];
     
svg02.selectAll("text")
   .data(texts)
   .enter()
   .append("text")
   .attr("x", function(d) { return d.x;} )
   .attr("y", function(d) { return d.y;})
   .text(function(d) {return d.txt;})
   .attr("font-family", "sans-serif")
   .attr("font-size", "20px")
   .style("fill","white");

var curve02Data = [];
for (var i = 1; i <= 5; i=i+0.05) {
  curve02Data.push(i);
};

var curve021Data = [];
for (var i = 2; i <= 3; i=i+0.05) {
  curve021Data.push(i);
};

/* 軸 */
var scale02X = d3.scale.linear()
                          .domain([0,4.5])
                          .range([50,600]);
                          
var scale02Y = d3.scale.linear()
                           .domain([0.07,-0.00])
                           .range([0,370]);   
                           

var xAxis02 = d3.svg.axis()
                  .scale(scale02X)
                  .tickValues([0, 1, 2, 3, 4])
                  .tickPadding(5)
                  .tickFormat(d3.format("d"));

var xAxis02Group = svg02.append("g")
                      .attr("transform","translate(0,"+ scale02Y(0)+")")
                      .attr("stroke","white")
                      .call(xAxis02);   
                      

var yAxis02 = d3.svg.axis()
                  .scale(scale02Y)
                  .orient(["left"])
                  .tickPadding(0)
                  .tickValues([0, 0.01,0.02, 0.03, 0.04, 0.05,0.06]);

var yAxis02Group = svg02.append("g")
.attr("transform","translate(" + scale02X(0) + ",0)")
                      .attr("stroke","white")
                      .call(yAxis02);                                              
var area02 = d3.svg.area()
        .x(function(d,i) { return scale02X(d);})
        .y0(function(d,i) { return scale02Y(0);})
        .y1(function(d,i) { return scale02Y(Math.pow(Math.pow(d,4),-1));});
    svg02.append("path")
        .attr("d", area02(curve021Data))
        .attr("fill", "aqua");

var curve02 = d3.svg.line()
             .x(function(d,i) { return scale02X(d); })
             .y(function(d,i) { return scale02Y(Math.pow(Math.pow(d,4),-1)); })
             .interpolate("linear");

var Curve02 = svg02.append("path")
                    .attr("d", curve02(curve02Data))   
                    .attr("transform", "translate(0,0)")  
                      .attr("stroke", "gold")
                      .attr("stroke-width", 2)
                      .style("fill", "none");

/* *****************  
      1 / log t
   *****************  */
var svg03 = d3.select("#ins03").append("svg")
                                 .attr("height",gHeight)
                                 .attr("width",gWidth)
                                 .style("background","black");
/* Scale*/
var scale03X = d3.scale.linear()
                          .domain([0,4.5])
                          .range([40,590]);
                          
var scale03Y = d3.scale.linear()
                           .domain([4.2,-3])
                           .range([10,380]);   

var texts = [
  {"x":50,"y":20,"txt":""},
  {"x":2.3,"y":-0.5,"txt":"x"},  
  {"x":4.5,"y":-0.5,"txt":"t"}
];
     
svg03.selectAll("text")
   .data(texts)
   .enter()
   .append("text")
   .attr("x", function(d) { return scale03X(d.x);} )
   .attr("y", function(d) { return scale03Y(d.y);})
   .text(function(d) {return d.txt;})
   .attr("font-family", "sans-serif")
   .attr("font-size", "20px")
   .style("fill","white");

var curve031Data = [];
var curve032Data = [];
var curve033Data = [];

for (var i = 1.01; i < 5; i=i+0.01) {
  curve031Data.push(i);
};
for (var i = 0; i < 1; i=i+0.01) {
  curve032Data.push(i);
};
for (var i = 1.01; i <= 2.3; i=i+0.01) {
  curve033Data.push(i);
};


/* Areas*/
var area03 = d3.svg.area()
        .x(function(d,i) { return scale03X(d);})
        .y0(function(d,i) { return scale03Y(0);})
        .y1(function(d,i) { return scale03Y(Math.pow(Math.log(d),-1));});
svg03.append("path")
        .attr("d", area03(curve032Data))
        .attr("fill", "blue");
svg03.append("path")
        .attr("d", area03(curve033Data))
        .attr("fill", "blue");

/* Lines */
var curve03 = d3.svg.line()
             .x(function(d,i) { return scale03X(d); })
             .y(function(d,i) { return scale03Y(Math.pow(Math.log(d),-1)); })
             .interpolate("linear");

var Curve031 = svg03.append("path")
                    .attr("d", curve03(curve031Data))   
                    .attr("transform", "translate(0,0)")  
                      .attr("stroke", "gold")
                      .attr("stroke-width", 2)
                      .style("fill", "none");

var Curve032 = svg03.append("path")
                    .attr("d", curve03(curve032Data))   
                    .attr("transform", "translate(0,0)")  
                      .attr("stroke", "gold")
                      .attr("stroke-width", 2)
                      .style("fill", "none");

/* 軸 */
var xAxis03 = d3.svg.axis()
                  .scale(scale03X)
                  .tickValues([1, 2, 3, 4])
                  .tickPadding(10)
                  .tickFormat(d3.format("d"));

var xAxis03Group = svg03.append("g")
                      .attr("transform","translate(0,"+ scale03Y(0)+")")
                      .attr("stroke","white")
                      .attr("stroke-width","2")
                      .style("fill","none")
                      .call(xAxis03);   

var yAxis03 = d3.svg.axis()
                  .scale(scale03Y)
                  .orient(["left"])
                  .tickPadding(2)
                  .tickValues([-2,-1,0,1,2,3,4])
                  .tickFormat(d3.format("d"));

var yAxis03Group = svg03.append("g")
                      .attr("transform","translate(" + scale03X(0) + ",0)")
                      .attr("stroke","white")
                      .attr("stroke-width","2")
                      .style("fill","none")
                      .call(yAxis03);                                 

                    
</script>